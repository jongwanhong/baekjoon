# dp - 2 x n 타일링 - 12900
# 가로 길이가 2이고 세로의 길이가 1인 직사각형모양의 타일이 있습니다.
# 이 직사각형 타일을 이용하여 세로의 길이가 2이고 가로의 길이가 n인 바닥을 가득 채우려고 합니다. 타일을 채울 때는 다음과 같이 2가지 방법이 있습니다.
# 타일을 가로로 배치 하는 경우
# 타일을 세로로 배치 하는 경우
# 직사각형의 가로의 길이 n이 매개변수로 주어질 때, 이 직사각형을 채우는 방법의 수를 return 하는 solution 함수를 완성해주세요.

# dp 바텀 업 - 합 구할때마다 나누어주면 시간초과 해결
def solution(n):
    d = [0] * (n+1)
    d[1] = 1
    d[2] = 2
    for i in range(3, n+1):
        d[i] = d[i - 1] + d[i - 2] % 1000000007
        # print(d[i])

    return d[n] % 1000000007


# print(solution(5))

# dp topdown - 재귀 - 런타임에러(나누어주어도)
def solution(n):
    d = [0] * (n+1)
    # print('f(' + str(x) + ')', end=' ')
    # 종료 조건(1 혹은 2일 때 1 반환)
    if n == 1:
        return 1
    if n == 2:
        return 2
    # 이미 계산한 적 있는 문제라면 그대로 반환
    if d[n] != 0:
        return d[n]
    # 아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
    d[n] = solution(n - 1) + solution(n - 2)
    return d[n]
